# -*- coding: utf-8 -*-
"""Python-Listas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1keZTx-2zq6SRk-simEbCE3V2tQFH2Q8Q

#Programação Python - Listas (lists)
  As listas são coleções de dados padrões do Python


1.   Coleção: Permite armazenar vários valores em uma única estrutura
2.   Padrão: Já vem por padrão no próprio python
"""

#Declaração
l1 = []

l2 = [1, 2, 3, 4, 5]

l3 = [1.5, 1.6, 1.7, 1.8]

l4 = [1, 5, "abacaxi", 1.8, "aula", 5, [1, 2, 3]]

print(l4)

#Unindo multiplas listas
l5 = l4 + l3
print(l5)

#Listas são indexadas
l4 = [1, 5, "abacaxi", 1.8, "aula", 5, [1, 2, 3]]

print(l4[2:5])
#print(l4[-1])

qtt_elementos_lista = len(l4)
for i in range(qtt_elementos_lista):
  print(l4[i], end=" ")

for i in l4:
  print(i, end=" ")

for idx, val in enumerate(l4):
  print(idx, val)

#Listas são mutáveis
l4 = [1, 5, "abacaxi", 1.8, "aula", 5, [1, 2, 3]]

print(l4)
l4[2] = 9
print(l4)

#Compreensões
l4 = [1, 5, "abacaxi", 1.8, "aula", 5, [1, 2, 3]]

#l0 = []
#for i in l4:
#  if(type(i) == int):
#    l0.append(i)

#print(l0)
l0 = [i for i in l4 if isinstance(i, int)]
print(l0)

"""#Métodos das Listas"""

l4 = [1, 5, "abacaxi", 1.8, "aula", 5, [1, 2, 3]]

#append() Adiciona um elemento ao final da lista
l4.append(99)
l4.append("casa")
print(l4)

#insert()	Adiciona um elemento em uma posição específica
l4 = [1, 5, "abacaxi", 1.8, "aula", 5, [1, 2, 3]]
l4.insert(2, "banana")
print(l4)

#remove()	Remove um elemento de determinado valor da lista
l4 = [1, 5, "abacaxi", 1.8, "aula", 5, [1, 2, 3]]
l4.remove(5)
print(l4)

#count()	Retorna o número de vezes que um determinador valor aparece na lista
l4 = [1, 5, "abacaxi", 1.8, "aula", 5, [1, 2, 3]]
print(l4.count("abacaxi"))
print(l4.count(5))

#index()	Retorna o índice de um determinado valor na lista
l4 = [1, 5, "abacaxi", 1.8, "aula", 5, [1, 2, 3]]
#print(l4.index(1.8))
print(l4.index(5))

#sort(reverse=True|False, key=func))	Ordena os elementos da lista
l6  = [13, 24, 1, 156, 1666, 9, 0]
print(l6)
l6.sort()
print(l6)

l6 = [13, 24, 1, 156, 111, 1666, 9, 0]

def fun(b):
  val_b = len(str(b))
  return val_b

l6.sort(reverse=True, key=fun)
print(l6)

#reverse()	Inverte a ordem dos elementos na lista
l4 = [1, 5, "abacaxi", 1.8, "aula", 5, [1, 2, 3]]
print(l4)
l4.reverse()
print(l4)

#clear()	Remove todos os elementos da lista
l4 = [1, 5, "abacaxi", 1.8, "aula", 5, [1, 2, 3]]
print(l4)
l4.clear()
print(l4)

#copy()	Retorna uma cópia exata da lista
l4 = [1, 5, "abacaxi", 1.8, "aula", 5, [1, 2, 3]]
l7 = l4.copy()
l7[2] = "manga"
print(l4)
print(l7)

#Listas são passadas por referência
l4 = [1, 5, "abacaxi", 1.8, "aula", 5, [1, 2, 3]]
print(l4)
l7 = l4
l7[2] = "manga"
print(l4)

#extend()	Adiciona elementos de uma lista ou estrutura iterativa ao final de outra lista
l4 = [1, 5, "abacaxi", 1.8, "aula", 5, [1, 2, 3]]
#l5 = l4 + [1, 2, 5, 6]
#print(l5)
#l4 = l4 + range(0, 50, 2)
l4.extend(range(0, 50, 2))
print(l4)

#pop()	Remove um elemento de uma posição específica da lista
l4 = [1, 5, "abacaxi", 1.8, "aula", 5, [1, 2, 3]]
print(l4)
val = l4.pop(3)
print(l4)
print(val)